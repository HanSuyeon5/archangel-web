buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "gradle.plugin.com.github.jlouns:gradle-cross-platform-exec-plugin:0.5.0"
	}
}

apply plugin: "com.github.jlouns.cpe"

def dockerOrgName = 'archangeldlt'
def dockerImageName = "${dockerOrgName}/web"

///////////////
task buildFrontForDist(type: Copy,
                       dependsOn: [':front-end:build', ':back-end:clean']) {
  group 'Top'
  description 'Build front-end, ready to be bundled into back-end distribution package'

  from 'front-end/build'
  into 'back-end/src/ratpack/front-end'
}

task buildMonitorForDist(type: Copy,
                         dependsOn: [':monitor:build', ':back-end:clean']) {
  group 'Top'
  description 'Build front-end, ready to be bundled into back-end distribution package'

  from 'monitor/build'
  into 'back-end/src/ratpack/monitor'
}

task buildDist(dependsOn: [buildFrontForDist, buildMonitorForDist, ':back-end:distTar']) {
  group 'Top'
  description 'Build everything, create distribution package'
}

task start(type: CrossPlatformExec,
           dependsOn: ['buildDist', ':back-end:installDist']) {
  group 'Top'
  description 'Builds front-end and back-end, starts the server'

  commandLine './archangel-web', '--web'
  workingDir './back-end/build/install/archangel-web/bin/'
}

task clean (dependsOn: [':back-end:clean', ':front-end:clean']) {
  group 'Top'
  description 'Clean everything'
}

task buildDocker(type: CrossPlatformExec,
                 dependsOn: [buildDist, ':back-end:installDist']) {
  group 'Top'
  description 'Build runnable Docker image'

  commandLine 'docker', 'build', '--tag', dockerImageName, '.'
}

task pushDocker(type: CrossPlatformExec) {
  group 'Util'
  description "Push ${dockerImageName} to Docker Hub"

  commandLine 'docker', 'push', dockerImageName
}

task buildGethImage(type: CrossPlatformExec) {
  group 'Util'
  description 'Build Rinkeby network Ethereum client Docker image'

  commandLine 'docker', 'build', '--tag', "${dockerOrgName}/rinkeby-client", '.'
  workingDir './utils/rinkeby-client/'
}